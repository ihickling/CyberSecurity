## Automated ELK Stack Deployment

The files in this repository were used to configure the network depicted below.

![TODO: Update the path with the name of your diagram](Images/diagram_filename.png)

These files have been tested and used to generate a live ELK deployment on Azure. They can be used to either recreate the entire deployment pictured above. Alternatively, select portions of the playbook (yml) file may be used to install only certain pieces of it, such as Filebeat.

  - root@75322f3b92d9:/etc/ansible/roles/filebeat-playbook.yml
  root@75322f3b92d9:/etc/ansible/elk.yml
  root@75322f3b92d9:/etc/ansible/filebeat-config.yml


This document contains the following details:
- Description of the Topologu
- Access Policies
- ELK Configuration
  - Beats in Use
  - Machines Being Monitored
- How to Use the Ansible Build


### Description of the Topology

The main purpose of this network is to expose a load-balanced and monitored instance of DVWA, the D*mn Vulnerable Web Application.

Load balancing ensures that the application will be highly responsive, in addition to restricting traffic to the network.
- _TODO: What aspect of security do load balancers protect? What is the advantage of a jump box?
Load balancers protect against DDoS attacks by shifting the attack traffic to a seperate network
A jump box is a system on a network used to access devices in seperate security zone.
Integrating an ELK server allows users to easily monitor the vulnerable VMs for changes to the data and system logs.
- _TODO: What does Filebeat watch for? FileBeat monitors log data.
- _TODO: What does Metricbeat record? Metricbeat collects metric data from the operating system.

The configuration details of each machine may be found below.
_Note: Use the [Markdown Table Generator](http://www.tablesgenerator.com/markdown_tables) to add/remove values from the table_.

| Name     | Function | IP Address | Operating System |
|----------|----------|------------|------------------|
| Jump Box | Gateway  | 10.0.0.1   | Linux            |
| Elk VM   | Server   | 10.1.0.4   | Linux            |
| WEb-1    | Server   | 10.0.0.8   | Linux            |
| WEB-2    | Server   | 10.0.0.9   | Linux            |

### Access Policies

The machines on the internal network are not exposed to the public Internet. 

Only the jump machine can accept connections from the Internet. Access to this machine is only allowed from the following IP addresses:
- _TODO: Add whitelisted IP addresses 73.29.204.216

Machines within the network can only be accessed by ssh.
- _TODO: Which machine did you allow to access your ELK VM? What was its IP address?_The jumpbox was allowed to access the Elk VM and had an IP of 13.82.129.27

A summary of the access policies in place can be found in the table below.

| Name     | Publicly Accessible | Allowed IP Addresses |
|----------|---------------------|----------------------|
| Jump Box | Yes                 | 10.0.0.4             |
| Web 1    |      No             | 10.0.0.8             |
| Web 2    |      No             | 10.0.0.9             |
| Elk VM   |      No             | 10.1.0.1             |
### Elk Configuration

Ansible was used to automate configuration of the ELK machine. No configuration was performed manually, which is advantageous because...
- _TODO: What is the main advantage of automating configuration with Ansible?_ THe main advantage is that ansible is agentless and does not need 

The playbook implements the following tasks:
- _TODO: In 3-5 bullets, explain the steps of the ELK installation play. E.g., install Docker; download image; etc._
- Create Elk Vm 
- SSH to JumpBox
- SSH to Elk VM and run playbooks 

The following screenshot displays the result of running `docker ps` after successfully configuring the ELK instance.

![TODO: Update the path with the name of your screenshot of docker ps output](Images/docker_ps_output.png)

### Target Machines & Beats
This ELK server is configured to monitor the following machines:
- _TODO: List the IP addresses of the machines you are monitoring
  - 10.0.0.4
  - 10.0.0.8
  - 10.0.0.9

We have installed the following Beats on these machines:
- _TODO: Specify which Beats you successfully installed_
  
Filebeat and Metricbeat were successfully installed. 

These Beats allow us to collect the following information from each machine:
- _TODO: In 1-2 sentences, explain what kind of data each beat collects, and provide 1 example of what you expect to see. E.g., `Winlogbeat` collects Windows logs, which we use to track user logon events, etc._

File beat monitors the loge files or locations that are specified. An example of Filebeat would be Azure and MySQL databases.  

Metricbeat takes the metric data collected and ships it out to a specified output. 

### Using the Playbook
In order to use the playbook, you will need to have an Ansible control node already configured. Assuming you have such a control node provisioned: 

SSH into the control node and follow the steps below:
- Copy the Filebeat file to etc/ansible/roles/files.
- Update the filebeat-config.yml file to include the elk private IP in lines 1106 and 1108.
- Run the playbook, and navigate to http://40.84.45.181:5601/app/kabana__ to check that the installation worked as expected.

_TODO: Answer the following questions to fill in the blanks:_
- _Which file is the playbook?  Where do you copy it?_filebeat-playbook.yml
- _Which file do you update to make Ansible run the playbook on a specific machine? How do I specify which machine to install the ELK server on versus which to install Filebeat on?_  The file that you update is the metricbeat-config.yml. These changes are specified in the etc/ansible/hosts, two groups must be specified- 1. the webservers and 2. the Elk Servers Group
- _Which URL do you navigate to in order to check that the ELK server is running?
  -http://40.84.45.181:5601/app/kabana

_As a **Bonus**, provide the specific commands the user will need to run to download the playbook, update the files, etc._
